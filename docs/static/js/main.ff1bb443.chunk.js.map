{"version":3,"sources":["ResumeCard.js","ResumeView.js","PcView.js","useCannon.js","Background.js","MobileView.js","App.js","index.js"],"names":["ResumeCard","isUp","year","description","Career","styled","div","style","position","margin","lineHeight","x","y","width","height","top","left","cx","cy","r","fill","x1","y1","x2","y2","stroke","stroke-width","ResumeView","svg","zIndex","display","alignItems","paddingLeft","PcView","fadeIn","keyframes","FadeInTitle","span","props","random","Title","TitleList","i","length","tempProps","push","className","color","justifyContent","flexDirection","fontSize","letterSpacing","context","React","createContext","Provider","children","useState","CANNON","world","useEffect","broadphase","solver","iterations","gravity","set","useFrame","step","value","useCannon","fn","deps","ref","useRef","useContext","body","addBody","removeBody","current","copy","quaternion","Container","Ball","args","isVisible","mass","addShape","castShadow","receiveShadow","attach","Plane","Swarm","eventHandler","mouse","window","setTimeout","count","mesh","light","dummy","useMemo","THREE","particles","temp","t","Math","factor","speed","xFactor","yFactor","zFactor","rColor","gColor","bColor","mx","my","state","forEach","particle","a","cos","sin","b","s","scale","rotation","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","distance","intensity","Background","setVisible","camera","angle","penumbra","MobileView","Title_cossy","App","innerWidth","innerHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff1bb443.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ResumeCard = ({ isUp, year, description }) => {\n\n    const Career = styled.div `\n        height: 200px;\n        width: 500px;\n        color: white;\n    `\n\n    if ( isUp ) {\n        return (\n            <Career style={{position: \"relative\"}}>\n                <p style={{margin: 0, lineHeight: \"20px\"}}>{description}</p>\n                <svg x=\"0\" y=\"0\" width=\"500px\" height=\"100px\" style={{\n                    position: \"relative\",\n                    top: 0,\n                    left: 0,\n                }}>\n                    <circle cx=\"20px\" cy=\"80px\" r=\"10px\" fill=\"white\" />\n                    <line x1=\"20px\" y1=\"80px\" x2=\"100px\" y2=\"0px\" stroke=\"white\" stroke-width=\"1\" />\n                    <line x1=\"100px\" y1=\"0px\" x2=\"400px\" y2=\"0px\" stroke=\"white\" stroke-width=\"2\" />\n                </svg>\n                <p style={{margin: 0}}>{year}</p>\n            </Career>\n        )\n    } else {\n        return (\n            <Career style={{position: \"relative\"}}>\n                <p style={{margin: 0, lineHeight: \"80px\"}}>{year}</p>\n                <svg x=\"0\" y=\"0\" width=\"500px\" height=\"100px\" style={{\n                    position: \"relative\",\n                    top: 0,\n                    left: 0,\n                }}>\n                    <circle cx=\"20px\" cy=\"20px\" r=\"10px\" fill=\"white\" />\n                    <line x1=\"20px\" y1=\"20px\" x2=\"100px\" y2=\"100px\" stroke=\"white\" stroke-width=\"1\" />\n                    <line x1=\"100px\" y1=\"100px\" x2=\"400px\" y2=\"100px\" stroke=\"white\" stroke-width=\"2\" />\n                </svg>\n                <p style={{margin: 0}}>{description}</p>\n            </Career>\n        )\n    }\n}\n\nexport default ResumeCard;","import React from 'react';\nimport styled from \"styled-components\";\n\nimport ResumeCard from \"./ResumeCard\";\n\nconst ResumeView = () => {\n\n    const Line = styled.svg`\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        zIndex: -1,\n    `\n    return (\n        <>\n        <div style={{\n            position: \"absolute\",\n            top: 0,\n            left: \"110vw\",\n            zIndex: -1,\n        }}>\n            <svg x=\"0\" y=\"0\" width=\"200vw\" height=\"100vh\">\n                <line x1=\"0\" y1=\"50vh\" x2=\"200vw\" y2=\"50vh\" stroke=\"white\" stroke-width=\"1\"></line>\n            </svg>\n        </div>\n        <div style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            paddingLeft: \"20vw\"\n        }}>\n            <ResumeCard isUp={true} year={1995} description={\"I was born in Fukushima.\"}/>\n            <ResumeCard isUp={false} year={2015} description={\"I entered Kyoto Univ.\"}/>\n            <ResumeCard isUp={true} year={2020} description={\"I major X-ray astronomy in Cosmic-ray Lab.\"}/>\n        </div>\n        </>\n    )\n}\n\nexport default ResumeView;","import React from 'react';\nimport ResumeView from './ResumeView';\nimport styled, { keyframes } from 'styled-components';\nimport \"./PcView.css\";\n\nfunction PcView() {\n\n    const fadeIn = keyframes`\n      0% {\n        filter: blur(3rem);\n        opacity: 0;\n      }\n      100% {\n        filter: blur(0);\n        opacity: 1;\n      }\n    `\n  \n    const FadeInTitle = styled.span`\n      animation: ${props => props.random}s ${fadeIn} ease-out;\n    `\n  \n    const Title = [\"→\", \"s\", \"c\", \"r\", \"o\", \"l\", \"l\"]\n  \n    var TitleList = [];\n    for(let i = 0; i < Title.length; i++){\n      var random = i * 0.2 + 0.5;\n      var tempProps = {\n        random: random\n      }\n      TitleList.push(<FadeInTitle {...tempProps}>{Title[i]}</FadeInTitle>);\n    }\n  \n    return (\n      <div className=\"container\">\n        <div \n          className=\"scroll\"\n          style={{\n            color: \"white\",\n            height:\"100vh\",\n            width: \"100vw\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n        }}>\n          <p style={{fontSize: \"4rem\", letterSpacing: \"2rem\",}}>Cossy</p>\n          <p style={{fontSize: \"2rem\", letterSpacing: \"1rem\",}}>{TitleList}</p>\n        </div>\n        <ResumeView />\n      </div>\n    );\n  }\n  \n  export default PcView;","import * as CANNON from 'cannon';\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\n\n// Cannon-world context provider\nconst context = React.createContext()\nexport function Provider({ children }) {\n  // Set up physics\n  const [world] = useState(() => new CANNON.World())\n  useEffect(() => {\n    world.broadphase = new CANNON.NaiveBroadphase()\n    world.solver.iterations = 10\n    world.gravity.set(0, 0, -10)\n  }, [world])\n\n  // Run world stepper every frame\n  useFrame(() => world.step(1 / 77))\n  // Distribute world via context\n  return <context.Provider value={world} children={children} />\n}\n\n// Custom hook to maintain a world physics body\nexport function useCannon({ ...props }, fn, deps = []) {\n  const ref = useRef()\n  // Get cannon world object\n  const world = useContext(context)\n  // Instanciate a physics body\n  const [body] = useState(() => new CANNON.Body(props))\n  useEffect(() => {\n    // Call function so the user can add shapes\n    fn(body)\n    // Add body to world on mount\n    world.addBody(body)\n    // Remove body on unmount\n    return () => world.removeBody(body)\n  }, deps)\n\n  useFrame(() => {\n    if (ref.current) {\n      // Transport cannon physics into the referenced threejs object\n      ref.current.position.copy(body.position)\n      ref.current.quaternion.copy(body.quaternion)\n    }\n  })\n\n  return ref\n}","import * as THREE from 'three';\nimport * as CANNON from 'cannon';\nimport React, { useEffect, useState, useRef, useMemo } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { useCannon, Provider } from './useCannon';\nimport styled from \"styled-components\";\nimport { RGBFormat } from 'three';\n\nconst Container = styled.div`\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n        z-index: -1;\n    `\n\nconst Ball = ({ position, args, isVisible }) => {\n    const ref = useCannon({ mass: 100000 }, body => {\n        body.addShape(new CANNON.Sphere());\n        body.position.set(...position);\n    });\n    if (isVisible) {\n        return (\n            <mesh ref={ref} castShadow receiveShadow>\n                <sphereBufferGeometry attach='geometry' args={args} />\n                <meshStandardMaterial attach='material' />\n            </mesh>\n        );\n    } else {\n        return (\n            <></>\n        );\n    }\n};\n\nconst Plane = ({ position, isVisible }) => {\n    const ref = useCannon({ mass: 0 }, body => {\n        body.addShape(new CANNON.Plane());\n        body.position.set(...position);\n    });\n    if (isVisible) {\n        return (\n            <mesh ref={ref} receiveShadow>\n                <planeBufferGeometry attach='geometry' args={[1000, 1000]} />\n                <meshPhongMaterial attach='material' color='#272727' />\n            </mesh>\n        );\n    } else {\n        return (\n            <></>\n        );\n    } \n};\n\nconst  Swarm = ({ eventHandler, mouse, isVisible }) => {\n    window.setTimeout(eventHandler, 6200)\n    const count = isVisible ? 0 : 20000\n    const mesh = useRef()\n    const light = useRef()\n\n    const dummy = useMemo(() => new THREE.Object3D(), [])\n    // Generate some random positions, speed factors and timings\n    const particles = useMemo(() => {\n      const temp = []\n      for (let i = 0; i < count; i++) {\n        const t = Math.random() * 100\n        const factor = 20 + Math.random() * 100\n        const speed = 0.01 + Math.random() / 200\n        const xFactor = -50 + Math.random() * 100\n        const yFactor = -50 + Math.random() * 100\n        const zFactor = -50 + Math.random() * 100\n        const rColor = Math.random() * 255\n        const gColor = Math.random() * 255\n        const bColor = Math.random() * 255\n        temp.push({ t, factor, speed, xFactor, yFactor, zFactor, rColor, gColor, bColor, mx: 0, my: 0 })\n      }\n      return temp\n    }, [count])\n    // The innards of this hook will run every frame\n    useFrame(state => {\n      // Run through the randomized data to calculate some movement\n      particles.forEach((particle, i) => {\n        let { t, factor, speed, xFactor, yFactor, zFactor, rColor, gColor, bColor } = particle\n        // There is no sense or reason to any of this, just messing around with trigonometric functions\n        t = particle.t += speed / 2\n        const a = Math.cos(t) + Math.sin(t * 1) / 10\n        const b = Math.sin(t) + Math.cos(t * 2) / 10\n        const s = Math.cos(t)\n        particle.mx += (mouse.current[0] - particle.mx) * 0.01\n        particle.my += (mouse.current[1] * -1 - particle.my) * 0.01\n        // Update the dummy object\n        dummy.position.set(\n          (particle.mx / 10) * a + xFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 1) * factor) / 10,\n          (particle.my / 10) * b + yFactor + Math.sin((t / 10) * factor) + (Math.cos(t * 2) * factor) / 10,\n          (particle.my / 10) * b + zFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 3) * factor) / 10\n        )\n        dummy.scale.set(s, s, s)\n        dummy.rotation.set(s * 5, s * 5, s * 5)\n        dummy.updateMatrix()\n        // And apply the matrix to the instanced item\n        mesh.current.setMatrixAt(i, dummy.matrix)\n      })\n      mesh.current.instanceMatrix.needsUpdate = true\n    })\n    if (isVisible) {\n        return (\n        <>\n            <instancedMesh ref={mesh} args={[null, null, count]}>\n            <sphereBufferGeometry attach=\"geometry\" args={[0.00001, 0]} />\n            <meshStandardMaterial attach=\"material\" color=\"white\" />\n            </instancedMesh>\n        </>\n        )\n    } else {\n        return (\n            <>\n                <pointLight ref={light} distance={20} intensity={8} color=\"lightblue\" />\n                <instancedMesh ref={mesh} args={[null, null, count]}>\n                    <bufferGeometry attach='geometry'>\n                        {/* <bufferAttribute\n                            attachObject={['attributes', 'position']}\n                            count={positions.length / 3}\n                            array={new Float32Array(positions)}\n                            itemSize={3}\n                        />\n                        <bufferAttribute\n                            attachObject={['attributes', 'color']}\n                            count={colors.length / 4}\n                            array={new Uint8Array(colors)}\n                            itemSize={4}\n                            normalized\n                        /> */}\n                    </bufferGeometry>\n                <sphereBufferGeometry attach=\"geometry\" args={[0.2, 10]} />\n                <meshStandardMaterial attach=\"material\" color=\"#ff00ff\" />\n                </instancedMesh>\n            </>\n        )\n    }\n  }\n\n\nconst Background = () => {\n    const [ isVisible, setVisible ] = useState(true)\n    const mouse = useRef([0, 0])\n    \n    return (\n        <Container>\n            <Canvas camera={{ position: [0, 0, -12]}} >\n                <ambientLight intensity={1} />\n                <spotLight\n                    intensity={0.6}\n                    position={[0, 0, 50]}\n                    angle={0}\n                    penumbra={1}\n                    castShadow\n                />\n                <Provider>\n                    <Plane position={[0, 0, -10]} isVisible={isVisible}/>\n                    <Ball position={[0, 0, 10]} args={[1, 50, 50]} isVisible={isVisible} />\n                </Provider>\n                <Swarm mouse={mouse} isVisible={isVisible} eventHandler={setVisible} />\n            </Canvas>\n        </Container>\n    )\n}\n\nexport default Background;","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Reset } from \"styled-reset\";\n\nimport Background from \"./Background\";\nimport \"./MobileView.css\";\n\nfunction MobileView() {\n    \n    const fadeIn = keyframes`\n        0% {\n            filter: blur(3rem);\n            opacity: 0;\n        }\n        100% {\n            filter: blur(0);\n            opacity: 1;\n        }\n    `\n\n    const FadeInTitle = styled.span`\n        color: gray;\n        animation: ${props => props.random}s ${fadeIn} ease-out;\n    `\n\n    const Title_coming = [\"C\", \"o\", \"m\", \"i\", \"n\", \"g\", \"\", \"S\", \"o\", \"o\", \"n\", \"...\"]\n    const Title_cossy = [\"C\", \"o\", \"s\", \"s\", \"y\"]\n\n    var TitleList = [];\n    for(let i = 0; i < Title_cossy.length; i++){\n        var random = Math.random() * 2 + 1;\n        var tempProps = {\n            random: random\n        }\n        TitleList.push(<FadeInTitle {...tempProps}>{Title_cossy[i]}</FadeInTitle>);\n    }\n\n  return (\n    <div>\n        <Reset />\n        <Background />\n        <h1\n            style={{\n            color: \"#FFFFFF\",\n            height: \"100vh\",\n            width: \"100vw\",\n            position: \"absolute\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            letterSpacing: \"0.3rem\"\n        }}>\n            {TitleList}\n        </h1>\n    </div>\n  );\n}\n\nexport default MobileView;","import React from 'react';\nimport PcView from './PcView';\nimport MobileView from './MobileView';\n\nfunction App() {\n\n  const width = window.innerWidth;\n  const height = window.innerHeight;\n\n  return (\n    <div>\n      {width > height ? <PcView/> : <MobileView/>}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}